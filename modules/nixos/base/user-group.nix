{
  username,
  fullUsername,
  config,
  pkgs,
  ...
}: {
  # Don't allow mutation of users outside the config.
  users.mutableUsers = false;

  users.groups = {
    "${username}" = {};
    docker = {};
    # misc
    uinput = {};
  };

  users.defaultUserShell = pkgs.zsh;
  users.users."${username}" = {
    description = fullUsername;
    # generated by `mkpasswd -m scrypt`
    # we have to use initialHashedPassword here when using tmpfs for /
    initialHashedPassword = "$7$CU..../....aOiNxb.jKF62FFvhuMLBR.$EOVnTizw5wRSqD3MiMZ6rm04.V/FNNjvTC7fr4soPo2";
    home = "/home/${username}";
    shell = pkgs.zsh;
    isNormalUser = true;
    extraGroups = [
      username
      "users"
      "networkmanager"
      "wheel"
      "docker"
      "libvirtd"
    ];
    openssh.authorizedKeys.keys = [
      "ssh-ed25518 AAAAC3NzaC1lZDI1NTE5AAAAIJoALbDUzGjj4w8zl7c9jVOWWDagjTkNtqrhJLpRJSz8 froup@sonata"
      "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFog+xBaFU3tQCFOY6219+DDhOna+zITforRndZtdOcJ froup@symphony"
    ];
  };
  users.users.root = {
    initialHashedPassword = config.users.users."${username}".initialHashedPassword;
    openssh.authorizedKeys.keys = config.users.users."${username}".openssh.authorizedKeys.keys;
  };

  # The wheel group is a special user group,
  # which can access to the `su` or `sudo` command to run commands as super user.
  #
  # Don't ask for password for wheel group
  security.sudo.wheelNeedsPassword = true;
}
